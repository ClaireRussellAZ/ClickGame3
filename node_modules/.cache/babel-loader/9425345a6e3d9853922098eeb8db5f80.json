{"ast":null,"code":"var _jsxFileName = \"/Users/Computer/Desktop/ClicketyClick/src/App.js\";\nimport React, { Component } from \"react\"; //import { Route } from \"react-dom\";\n\nimport cards from \"./cards.json\";\nimport Card from \"./components/Card\";\nimport Score from \"./components/Score\"; //shuffle function\n\nfunction shuffle(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n\n  return array;\n}\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cards,\n      score: 0,\n      topScore: 0,\n      showAlert: 0,\n      showSuccess: 0,\n      clickedroses: []\n    };\n\n    this.clickedImage = id => {\n      let clickedroses = this.state.clickedroses;\n      let score = this.state.score;\n      let topScore = this.state.topScore;\n      this.setState({\n        showAlert: 0\n      });\n\n      if (clickedroses.indexOf(id) === -1) {\n        //push id into the array to be stored\n        clickedroses.push(id);\n        console.log(clickedroses); //run the score function\n\n        this.handleIncrement(); //reshuffle function after each click\n\n        this.makeShuffle();\n      } else if (this.state.score === 12) {\n        //alert player wins\n        this.setState({\n          showSuccess: 1,\n          score: 0,\n          clickedroses: []\n        });\n      } else {\n        //alert player of loss\n        this.setState({\n          score: 0,\n          clickedroses: []\n        });\n        console.log(\"Duplicate\");\n        this.setState({\n          showAlert: 1\n        });\n      }\n\n      if (score > topScore) {\n        this.setState({\n          topScore: score\n        });\n      }\n    };\n\n    this.handleIncrement = () => {\n      //setState updates components states\n      this.setState({\n        score: this.state.score + 1\n      });\n    };\n\n    this.makeShuffle = () => {\n      this.setState({\n        roses: shuffle(cards)\n      });\n    };\n  }\n\n  //render time!\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Score, {\n      title: \"Roses clicky Game\",\n      score: this.state.score,\n      topScore: this.state.topScore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, this.state.cards.map(cards => /*#__PURE__*/React.createElement(Card, {\n      key: cards.id,\n      id: cards.id,\n      variety: cards.variety,\n      img: cards.image,\n      clickedImage: this.clickedImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-dark\",\n      style: {\n        opacity: this.state.showAlert\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, \"You've already smelled this rose, choose again.\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-success\",\n      style: {\n        opacity: this.state.showSuccess\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, \"Congratulations! Click to play again.\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Computer/Desktop/ClicketyClick/src/App.js"],"names":["React","Component","cards","Card","Score","shuffle","array","i","length","j","Math","floor","random","App","state","score","topScore","showAlert","showSuccess","clickedroses","clickedImage","id","setState","indexOf","push","console","log","handleIncrement","makeShuffle","roses","render","map","variety","image","opacity"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n//import { Route } from \"react-dom\";\nimport cards from \"./cards.json\";\nimport Card from \"./components/Card\";\nimport Score from \"./components/Score\";\n\n//shuffle function\nfunction shuffle(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n\nclass App extends Component {\n  state = {\n    cards,\n    score: 0,\n    topScore: 0,\n    showAlert: 0,\n    showSuccess: 0,\n    clickedroses: [],\n  };\n\n  clickedImage = (id) => {\n    let clickedroses = this.state.clickedroses;\n    let score = this.state.score;\n    let topScore = this.state.topScore;\n    this.setState({\n      showAlert: 0,\n    });\n\n    if (clickedroses.indexOf(id) === -1) {\n      //push id into the array to be stored\n      clickedroses.push(id);\n      console.log(clickedroses);\n      //run the score function\n      this.handleIncrement();\n      //reshuffle function after each click\n      this.makeShuffle();\n    } else if (this.state.score === 12) {\n      //alert player wins\n      this.setState({\n        showSuccess: 1,\n        score: 0,\n        clickedroses: [],\n      });\n    } else {\n      //alert player of loss\n      this.setState({\n        score: 0,\n        clickedroses: [],\n      });\n      console.log(\"Duplicate\");\n      this.setState({\n        showAlert: 1,\n      });\n    }\n    if (score > topScore) {\n      this.setState({\n        topScore: score,\n      });\n    }\n  };\n  //handleIncrement increases this.state.score +1\n  handleIncrement = () => {\n    //setState updates components states\n    this.setState({ score: this.state.score + 1 });\n  };\n\n  //shuffle images\n  makeShuffle = () => {\n    this.setState({ roses: shuffle(cards) });\n  };\n\n  //render time!\n  render() {\n    return (\n      <div className=\"container\">\n        <Score\n          title=\"Roses clicky Game\"\n          score={this.state.score}\n          topScore={this.state.topScore}\n        />\n\n        <div className=\"row\">\n          {this.state.cards.map((cards) => (\n            <Card\n              key={cards.id}\n              id={cards.id}\n              variety={cards.variety}\n              img={cards.image}\n              clickedImage={this.clickedImage}\n            />\n          ))}\n\n          <div\n            className=\"alert alert-dark\"\n            style={{ opacity: this.state.showAlert }}\n          >\n            You've already smelled this rose, choose again.\n          </div>\n          <div\n            className=\"alert alert-success\"\n            style={{ opacity: this.state.showSuccess }}\n          >\n            Congratulations! Click to play again.\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}